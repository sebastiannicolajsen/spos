version: "3"
services:
  app:
    restart: always
    build: ./spos-app
    ports:
      - "3001:3001"
    environment:
      - REACT_APP_API_URL=http://localhost
      - REACT_APP_API_PORT=3000
      - REACT_APP_LOGS_PORT=8000
    depends_on:
      - api
    volumes:
      - ./spos:/usr/src/spos-app:rw
    networks:
      - sposnetwork
  api:
    restart: always
    build: ./spos
    ports:
      - "3000:3000"
      - "8000:8000"
    environment:
      - DATABASE_PORT=5432
      - DATABASE_TYPE=postgres
      - DATABASE_HOST=postgres
      - DATABASE_USERNAME=spos
      - DATABASE_NAME=spos
      - DATABASE_PASSWORD=replace
      - JWT_SECRET=MySecretKey
      - REDIS_HOST=redis
      - LOG_TYPE=file
    depends_on:
      - db
      - redis
    volumes:
      - ./spos:/usr/src/spos:rw
    networks:
      - sposnetwork
  db:
    restart: always
    hostname: postgres
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=spos
      - POSTGRES_PASSWORD=replace
      - POSTGRES_DB=spos
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spos"]
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - sposnetwork
  redis:
    restart: always
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    networks:
      - sposnetwork
networks:
  sposnetwork:
    name: spos-network
